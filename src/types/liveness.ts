// Request types
export interface LivenessTrackingData {
    extraData?: string; // Base64 - Token generated by Mobile/Web SDK
    operationId?: string; // Base64 - Operation identifier generated by Mobile/Web SDK
}

export interface EvaluatePassiveLivenessRequest {
    imageBuffer: string; // Base64 - BestImage property generated by Selphi widget
    tracking?: LivenessTrackingData; // Optional tracking information
}

// Response types
export interface EvaluatePassiveLivenessResponse {
    serviceResultCode: number; // Code indicating overall result of service execution
    serviceResultLog: string; // Descriptive field of service execution result
    serviceTime: string; // Total response time in milliseconds
    serviceTransactionId: string; // Transaction identifier associated with the request
    serviceLivenessResult: number; // Code indicating result of passive liveness test evaluation
}

// Error types
export class LivenessApiError extends Error {
    public status?: number;
    public code?: string;

    constructor(message: string, status?: number, code?: string) {
        super(message);
        this.name = 'LivenessApiError';
        this.status = status;
        this.code = code;
    }
}

// Service result codes (based on API documentation)
export enum ServiceResultCode {
    SUCCESS = 0,
    ERROR = 1
    // Add more codes as per API documentation
}

// Service liveness result codes (based on API documentation)
export enum ServiceLivenessResult {
    NOT_LIVE = 0,
    LIVE = 3
    // Add more codes as per API documentation
}

// Configuration types
export interface LivenessConfig {
    apiKey: string;
}

// UI specific types
export interface ImageInfo {
    width: number;
    height: number;
    size: number; // in bytes
    name: string;
    type: string;
}

export interface LivenessResult {
    title: string;
    imagePath: string;
    imageUrl?: string;
    resolution: string;
    size: string;
    diagnosticSaaS?: string;
    // SDK diagnostics - dynamic object for multiple endpoints
    sdkDiagnostics?: Record<string, string>; // key: endpoint tag, value: diagnostic
    error?: string;
    imageInfo?: ImageInfo;
    rawResponse?: EvaluatePassiveLivenessResponse;
    // SDK raw responses - dynamic object for multiple endpoints
    sdkRawResponses?: Record<string, SDKEvaluateResponse>; // key: endpoint tag, value: response
}

// SDK specific types
export interface SDKEvaluateRequest {
    image: string; // Base64 image data
}

export interface SDKEvaluateResponse {
    diagnostic: string;
    // Add other SDK response fields as needed
}

export interface SDKEndpointInfo {
    id: string;
    tag: string;
    url: string;
    isActive: boolean;
    isSelected: boolean;
}

export interface LivenessEvaluationConfig {
    useSaaS: boolean;
    useSDK: boolean;
    selectedSDKEndpoints: SDKEndpointInfo[];
}

export interface LivenessEvaluationOptions {
    apiKey: string;
    isDirectory: boolean;
    images: File[];
}
